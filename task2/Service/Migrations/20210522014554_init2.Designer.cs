// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Service;
using Service.Configuration;
using Service.Models;

namespace Service.Migrations
{
    [DbContext(typeof(BankingContext))]
    [Migration("20210522014554_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasPostgresEnum(null, "transaction_direction", new[] { "income", "outcome" })
                .HasPostgresEnum(null, "transaction_status", new[] { "pending", "completed", "declined" })
                .HasPostgresEnum(null, "transaction_type", new[] { "transfer", "fee", "fx" })
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Service.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric")
                        .HasColumnName("balance");

                    b.Property<string>("Currency")
                        .HasColumnType("text")
                        .HasColumnName("currency");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 25000m,
                            Currency = "GBP",
                            Name = "Main Fund"
                        },
                        new
                        {
                            Id = 2,
                            Balance = 1000m,
                            Currency = "GBP",
                            Name = "For investment"
                        },
                        new
                        {
                            Id = 3,
                            Balance = 150m,
                            Currency = "CAN",
                            Name = "For Canada market"
                        },
                        new
                        {
                            Id = 4,
                            Balance = 50m,
                            Currency = "USD",
                            Name = "For USA market"
                        });
                });

            modelBuilder.Entity("Service.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("integer")
                        .HasColumnName("account_id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<string>("Currency")
                        .HasColumnType("text")
                        .HasColumnName("currency");

                    b.Property<TransactionDirection>("Direction")
                        .HasColumnType("transaction_direction")
                        .HasColumnName("direction");

                    b.Property<TransactionStatus>("Status")
                        .HasColumnType("transaction_status")
                        .HasColumnName("status");

                    b.Property<TransactionType>("Type")
                        .HasColumnType("transaction_type")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountId = 4,
                            Amount = 500m,
                            Currency = "USD",
                            Direction = TransactionDirection.Outcome,
                            Status = TransactionStatus.Completed,
                            Type = TransactionType.Transfer
                        },
                        new
                        {
                            Id = 2,
                            AccountId = 4,
                            Amount = 16.49m,
                            Currency = "USD",
                            Direction = TransactionDirection.Income,
                            Status = TransactionStatus.Pending,
                            Type = TransactionType.FX
                        },
                        new
                        {
                            Id = 3,
                            AccountId = 4,
                            Amount = 0.05m,
                            Currency = "USD",
                            Direction = TransactionDirection.Income,
                            Status = TransactionStatus.Pending,
                            Type = TransactionType.Fee
                        },
                        new
                        {
                            Id = 4,
                            AccountId = 3,
                            Amount = 0.25m,
                            Currency = "CAN",
                            Direction = TransactionDirection.Outcome,
                            Status = TransactionStatus.Pending,
                            Type = TransactionType.Fee
                        },
                        new
                        {
                            Id = 5,
                            AccountId = 3,
                            Amount = 20.0m,
                            Currency = "CAN",
                            Direction = TransactionDirection.Outcome,
                            Status = TransactionStatus.Pending,
                            Type = TransactionType.FX
                        },
                        new
                        {
                            Id = 6,
                            AccountId = 3,
                            Amount = 1000.0m,
                            Currency = "USD",
                            Direction = TransactionDirection.Income,
                            Status = TransactionStatus.Declined,
                            Type = TransactionType.Transfer
                        },
                        new
                        {
                            Id = 7,
                            AccountId = 1,
                            Amount = 50.0m,
                            Currency = "GBP",
                            Direction = TransactionDirection.Income,
                            Status = TransactionStatus.Pending,
                            Type = TransactionType.Transfer
                        },
                        new
                        {
                            Id = 8,
                            AccountId = 1,
                            Amount = 12.52m,
                            Currency = "GBP",
                            Direction = TransactionDirection.Outcome,
                            Status = TransactionStatus.Declined,
                            Type = TransactionType.Transfer
                        },
                        new
                        {
                            Id = 9,
                            AccountId = 1,
                            Amount = 0.15m,
                            Currency = "GBP",
                            Direction = TransactionDirection.Outcome,
                            Status = TransactionStatus.Declined,
                            Type = TransactionType.Fee
                        },
                        new
                        {
                            Id = 10,
                            AccountId = 1,
                            Amount = 12000.81m,
                            Currency = "GBP",
                            Direction = TransactionDirection.Outcome,
                            Status = TransactionStatus.Pending,
                            Type = TransactionType.Transfer
                        },
                        new
                        {
                            Id = 11,
                            AccountId = 2,
                            Amount = 20.0m,
                            Currency = "GBP",
                            Direction = TransactionDirection.Income,
                            Status = TransactionStatus.Declined,
                            Type = TransactionType.Transfer
                        },
                        new
                        {
                            Id = 12,
                            AccountId = 2,
                            Amount = 100.0m,
                            Currency = "GBP",
                            Direction = TransactionDirection.Outcome,
                            Status = TransactionStatus.Declined,
                            Type = TransactionType.Transfer
                        },
                        new
                        {
                            Id = 13,
                            AccountId = 2,
                            Amount = 5.0m,
                            Currency = "GBP",
                            Direction = TransactionDirection.Outcome,
                            Status = TransactionStatus.Completed,
                            Type = TransactionType.Transfer
                        },
                        new
                        {
                            Id = 14,
                            AccountId = 2,
                            Amount = 5.0m,
                            Currency = "GBP",
                            Direction = TransactionDirection.Income,
                            Status = TransactionStatus.Completed,
                            Type = TransactionType.Transfer
                        },
                        new
                        {
                            Id = 15,
                            AccountId = 2,
                            Amount = 200.0m,
                            Currency = "GBP",
                            Direction = TransactionDirection.Outcome,
                            Status = TransactionStatus.Completed,
                            Type = TransactionType.Fee
                        },
                        new
                        {
                            Id = 16,
                            AccountId = 2,
                            Amount = 0.25m,
                            Currency = "GBP",
                            Direction = TransactionDirection.Outcome,
                            Status = TransactionStatus.Pending,
                            Type = TransactionType.Fee
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
